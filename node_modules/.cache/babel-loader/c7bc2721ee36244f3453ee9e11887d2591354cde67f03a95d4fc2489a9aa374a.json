{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhay\\\\Downloads\\\\WordHaveNoMeaning\\\\src\\\\components\\\\common\\\\ProgressBar.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBarContainer = styled.div`\n  width: 100%;\n  height: 12px;\n  background-color: #e0e0e0;\n  border-radius: var(--border-radius-small);\n  overflow: hidden;\n  margin: var(--spacing-sm) 0;\n  position: relative;\n`;\n_c = ProgressBarContainer;\nconst ProgressBarTrack = styled.div`\n  height: 100%;\n  background-color: var(--color-primary);\n  border-radius: var(--border-radius-small);\n  transition: width 0.3s ease;\n  width: ${props => props.percentage}%;\n`;\n_c2 = ProgressBarTrack;\nconst ProgressText = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: var(--font-size-small);\n  margin-top: var(--spacing-xs);\n  color: var(--color-text);\n`;\n_c3 = ProgressText;\nconst ProgressLabel = styled.span`\n  font-weight: 500;\n`;\n_c4 = ProgressLabel;\nconst ProgressValue = styled.span`\n  font-weight: 500;\n`;\n\n/**\r\n * Progress bar component\r\n * @param {Object} props - Component props\r\n * @param {number} props.current - Current value\r\n * @param {number} props.total - Total value\r\n * @param {string} props.label - Optional label for the progress bar\r\n * @param {boolean} props.showText - Whether to show the progress text\r\n * @returns {JSX.Element} - Rendered component\r\n */\n_c5 = ProgressValue;\nconst ProgressBar = ({\n  current,\n  total,\n  label,\n  showText = true\n}) => {\n  // Calculate percentage\n  const percentage = Math.min(100, Math.max(0, current / total * 100));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProgressBarContainer, {\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": percentage,\n      role: \"progressbar\",\n      children: /*#__PURE__*/_jsxDEV(ProgressBarTrack, {\n        percentage: percentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), showText && /*#__PURE__*/_jsxDEV(ProgressText, {\n      children: [label && /*#__PURE__*/_jsxDEV(ProgressLabel, {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ProgressValue, {\n        children: [current, \"/\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c6 = ProgressBar;\nexport default ProgressBar;\nProgressBar.propTypes = {\n  current: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  label: PropTypes.string,\n  showText: PropTypes.bool\n};\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ProgressBarContainer\");\n$RefreshReg$(_c2, \"ProgressBarTrack\");\n$RefreshReg$(_c3, \"ProgressText\");\n$RefreshReg$(_c4, \"ProgressLabel\");\n$RefreshReg$(_c5, \"ProgressValue\");\n$RefreshReg$(_c6, \"ProgressBar\");","map":{"version":3,"names":["React","styled","PropTypes","jsxDEV","_jsxDEV","ProgressBarContainer","div","_c","ProgressBarTrack","props","percentage","_c2","ProgressText","_c3","ProgressLabel","span","_c4","ProgressValue","_c5","ProgressBar","current","total","label","showText","Math","min","max","children","role","fileName","_jsxFileName","lineNumber","columnNumber","_c6","propTypes","number","isRequired","string","bool","$RefreshReg$"],"sources":["C:/Users/abhay/Downloads/WordHaveNoMeaning/src/components/common/ProgressBar.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProgressBarContainer = styled.div`\r\n  width: 100%;\r\n  height: 12px;\r\n  background-color: #e0e0e0;\r\n  border-radius: var(--border-radius-small);\r\n  overflow: hidden;\r\n  margin: var(--spacing-sm) 0;\r\n  position: relative;\r\n`;\r\n\r\nconst ProgressBarTrack = styled.div`\r\n  height: 100%;\r\n  background-color: var(--color-primary);\r\n  border-radius: var(--border-radius-small);\r\n  transition: width 0.3s ease;\r\n  width: ${props => props.percentage}%;\r\n`;\r\n\r\nconst ProgressText = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: var(--font-size-small);\r\n  margin-top: var(--spacing-xs);\r\n  color: var(--color-text);\r\n`;\r\n\r\nconst ProgressLabel = styled.span`\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ProgressValue = styled.span`\r\n  font-weight: 500;\r\n`;\r\n\r\n/**\r\n * Progress bar component\r\n * @param {Object} props - Component props\r\n * @param {number} props.current - Current value\r\n * @param {number} props.total - Total value\r\n * @param {string} props.label - Optional label for the progress bar\r\n * @param {boolean} props.showText - Whether to show the progress text\r\n * @returns {JSX.Element} - Rendered component\r\n */\r\nconst ProgressBar = ({ current, total, label, showText = true }) => {\r\n  // Calculate percentage\r\n  const percentage = Math.min(100, Math.max(0, (current / total) * 100));\r\n  \r\n  return (\r\n    <div>\r\n      <ProgressBarContainer aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow={percentage} role=\"progressbar\">\r\n        <ProgressBarTrack percentage={percentage} />\r\n      </ProgressBarContainer>\r\n      \r\n      {showText && (\r\n        <ProgressText>\r\n          {label && <ProgressLabel>{label}</ProgressLabel>}\r\n          <ProgressValue>{current}/{total}</ProgressValue>\r\n        </ProgressText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\nProgressBar.propTypes = {\r\n  current:  PropTypes.number.isRequired,\r\n  total:    PropTypes.number.isRequired,\r\n  label:    PropTypes.string,\r\n  showText: PropTypes.bool,\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}